{"version":3,"sources":["componets/Dialogs/Dialogs.module.css","componets/Dialogs/DialogItem/DialogItem.jsx","componets/Dialogs/Message/Message.jsx","componets/Dialogs/AddDialogsForm/AddNewDialogsForm.jsx","componets/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","componets/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","activeClassName","activeLink","name","src","Message","message","maxLength","maxLengthCreator","AddNewDialogsForm","useForm","register","handleSubmit","errors","formState","reset","console","log","onSubmit","slc","htmlFor","validate","required","type","placeholder","newMessageBody","role","btn","Dialogs","dialogsElements","dialogs","map","d","massagesElements","messages","m","dialogsItems","values","addMessage","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","messagesPage","newMessageText","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,WAAa,4BAA4B,SAAW,0BAA0B,QAAU,yBAAyB,IAAM,qBAAqB,IAAM,uB,kGCoBrOC,EAjBI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,qBAAKC,UAAWC,IAAEC,OAAlB,SACI,eAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAEI,WAAtC,UACKR,EAAMS,KACP,8BACI,qBAAKC,IAAI,oFCAdC,EATC,SAACX,GACb,OACI,8BACI,qBAAKG,UAAWC,IAAEQ,QAAlB,SAA4BZ,EAAMY,a,+BCAxCC,EAAYC,YAAiB,IA0BpBC,EAxBW,SAACf,GAAW,IAAD,EAC4BgB,cAAtDC,EAD0B,EAC1BA,SAAUC,EADgB,EAChBA,aAA0BC,EADV,EACFC,UAAYD,OADV,EACmBE,MAGpD,OAFAC,QAAQC,IAAIJ,GAGR,uBAAMK,SAAUN,EAAalB,EAAMwB,UAAnC,UACI,sBAAKrB,UAAWC,IAAEqB,IAAlB,UACI,uBAAOC,QAAQ,aACf,cAAC,IAAD,2BACQT,EAAS,iBAAkB,CAE3BU,SAAU,CAACC,aAAUf,gBAH7B,IAKIgB,KAAK,WACLC,YAAY,wBACfX,EAAOY,gBAAkB,sBAAMC,KAAK,QAAX,SAAoBb,EAAOY,eAAenB,aAExE,8BACI,wBAAQT,UAAWC,IAAE6B,IAArB,wBCWDC,EA9BC,SAAClC,GAEb,IAAImC,EAAkBnC,EAAMoC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYpC,GAAIoC,EAAEpC,GAAeO,KAAM6B,EAAE7B,MAAd6B,EAAEpC,OACtEqC,EAAmBvC,EAAMwC,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASvC,GAAIuC,EAAEvC,GAAeU,QAAS6B,EAAE7B,SAAjB6B,EAAEvC,OASzE,OACI,sBAAKC,UAAWC,IAAEgC,QAAlB,UACI,qBAAKjC,UAAWC,IAAEsC,aAAlB,SACKP,IAEL,qBAAKhC,UAAWC,IAAEoC,SAAlB,SACKD,IAEL,qBAAMpC,UAAWC,IAAEqB,IAAnB,SACI,cAAC,EAAD,CAAmBD,SAfd,SAACmB,GACd3C,EAAM4C,WAAWD,EAAOZ,yB,+CCV5Bc,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,QCmBRE,sBACXC,aAjBkB,SAACJ,GACnB,MAAO,CACHV,QAASU,EAAMK,aAAaf,QAC5BI,SAAUM,EAAMK,aAAaX,SAC7BY,eAAgBN,EAAMK,aAAaC,mBAIlB,SAACC,GACtB,MAAO,CACHT,WAAY,SAACb,GACTsB,EAASC,YAAmBvB,UDXR,SAACwB,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKzD,MAAM+C,OAET,cAACQ,EAAD,eAAeE,KAAKzD,QAFI,cAAC,IAAD,CAAUM,GAAI,eAJV,GAEXoD,IAAMH,WAUtC,OAFmCL,YAAQL,EAARK,CAAoCM,KCM5DP,CAGbf","file":"static/js/4.1031d38d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3LSLK\",\"dialogsItems\":\"Dialogs_dialogsItems__1emG1\",\"activeLink\":\"Dialogs_activeLink__3oTb0\",\"messages\":\"Dialogs_messages__VjMTJ\",\"message\":\"Dialogs_message__3ttuQ\",\"slc\":\"Dialogs_slc__kMYco\",\"btn\":\"Dialogs_btn__yjeqD\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.activeLink}>\r\n                {props.name}\r\n                <div>\r\n                    <img src='https://i.pinimg.com/474x/c0/b7/7f/c0b77faeb2cb3e67fd1b423c4535f6c3.jpg'/>\r\n                </div>\r\n\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.message}>{props.message}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../FormsControls/FormsControls\";\r\n\r\nconst maxLength = maxLengthCreator(50);\r\n\r\nconst AddNewDialogsForm = (props) => {\r\n    const {register, handleSubmit, formState: {errors}, reset} = useForm();\r\n    console.log(errors);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(props.onSubmit)}>\r\n            <div className={s.slc}>\r\n                <label htmlFor=\"textarea\"/>\r\n                <Textarea\r\n                    {...register(\"newMessageBody\", {\r\n\r\n                        validate: {required, maxLength}\r\n                    })}\r\n                    type=\"textarea\"\r\n                    placeholder=\"Enter your message\"/>\r\n                {errors.newMessageBody && <span role=\"alert\">{errors.newMessageBody.message}</span>}\r\n            </div>\r\n            <div>\r\n                <button className={s.btn}>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddNewDialogsForm;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddNewDialogsForm from \"./AddDialogsForm/AddNewDialogsForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogs.map(d => <DialogItem id={d.id} key={d.id} name={d.name}/>);\r\n    let massagesElements = props.messages.map(m => <Message id={m.id} key={m.id} message={m.message}/>);\r\n\r\n\r\n    let addMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {massagesElements}\r\n            </div>\r\n            <div  className={s.slc}>\r\n                <AddNewDialogsForm onSubmit={addMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-Reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.messagesPage.dialogs,\r\n        messages: state.messagesPage.messages,\r\n        newMessageText: state.messagesPage.newMessageText,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"sourceRoot":""}