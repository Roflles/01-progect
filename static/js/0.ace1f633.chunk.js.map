{"version":3,"sources":["componets/Login/Login.jsx"],"names":["minLength","minLengthCreator","LoginForm","onSubmit","error","useForm","register","handleSubmit","errors","formState","reset","console","log","htmlFor","id","required","pattern","value","message","type","placeholder","email","role","validate","password","connect","state","isAuth","auth","login","props","to","formData","rememberMe"],"mappings":"8KAOMA,EAAYC,YAAiB,GAG7BC,EAAY,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAAW,EACwBC,cAAtDC,EAD8B,EAC9BA,SAAUC,EADoB,EACpBA,aAA0BC,EADN,EACNC,UAAYD,OADN,EACeE,MAEpD,OADAC,QAAQC,IAAIJ,GAER,sBAAML,SAAUI,EAAaJ,GAA7B,SACI,gCACI,gCACI,uBAAOU,QAAQ,UACf,+CACIC,GAAG,SACCR,EAAS,QAAS,CAClBS,SAAU,WACVC,QAAS,CACLC,MAAO,eACPC,QAAS,gDANrB,IASIC,KAAK,QACLC,YAAa,WAEhBZ,EAAOa,OAAS,sBAAMC,KAAK,QAAX,SAAoBd,EAAOa,MAAMH,aAEtD,gCACI,uBAAOL,QAAQ,aACf,+CACIC,GAAG,YACCR,EAAS,WAAY,CAErBiB,SAAU,CAACR,aAAUf,gBAJ7B,IAMImB,KAAK,WACLC,YAAa,cAEhBZ,EAAOgB,UAAY,sBAAMF,KAAK,QAAX,SAAoBd,EAAOgB,SAASN,aAE5D,gCACI,uBAAOL,QAAQ,aACf,iDAAWP,EAAS,eAApB,IACOa,KAAM,cAHjB,kBAKEf,GAAS,8BACNA,IAGL,8BACI,wBAAQe,KAAK,SAAb,2BA6BLM,uBALS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OACpBvB,MAAOsB,EAAME,KAAKxB,SAGmB,CAACyB,WAA1BJ,EArBD,SAACK,GAMX,OAAIA,EAAMH,OACC,cAAC,IAAD,CAAUI,GAAI,aAGlB,gCACH,uCACA,cAAC7B,EAAD,CAAWC,SAVE,SAAC6B,GACdF,EAAMD,MAAMG,EAASX,MAAOW,EAASR,SAAUQ,EAASC,aASzB7B,MAAO0B,EAAM1B","file":"static/js/0.ace1f633.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {minLengthCreator, required} from \"../../utils/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-Reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst minLength = minLengthCreator(5);\r\n\r\n\r\nconst LoginForm = ({onSubmit, error}) => {\r\n    const {register, handleSubmit, formState: {errors}, reset} = useForm();\r\n    console.log(errors);\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div>\r\n                <div>\r\n                    <label htmlFor=\"email\"/>\r\n                    <input\r\n                        id=\"email\"\r\n                        {...register(\"email\", {\r\n                            required: \"required\",\r\n                            pattern: {\r\n                                value: /\\S+@\\S+\\.\\S+/,\r\n                                message: \"Entered value does not match email format\"\r\n                            }\r\n                        })}\r\n                        type=\"email\"\r\n                        placeholder={'Email'}\r\n                    />\r\n                    {errors.email && <span role=\"alert\">{errors.email.message}</span>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"password\"/>\r\n                    <input\r\n                        id=\"password\"\r\n                        {...register(\"password\", {\r\n\r\n                            validate: {required, minLength}\r\n                        })}\r\n                        type=\"password\"\r\n                        placeholder={'Password'}\r\n                    />\r\n                    {errors.password && <span role=\"alert\">{errors.password.message}</span>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"checkbox\"/>\r\n                    <input {...register(\"rememberMe\")}\r\n                           type={\"checkbox\"}/> remember me\r\n                </div>\r\n                { error && <div>\r\n                    {error}\r\n                </div>\r\n                }\r\n                <div>\r\n                    <button type=\"submit\">Login</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginForm onSubmit={onSubmit} error={props.error}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n   error: state.auth.error\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}