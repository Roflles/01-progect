{"version":3,"sources":["Api/Api.js","componets/Navbar/Navbar.module.css","redux/auth-Reducer.js","componets/Profile/MyPosts/MyPosts.module.css","utils/validators.js","componets/Paginator/Paginator.module.css","componets/Header/Header.module.css","componets/FormsControls/FormsControls.js","redux/dialogs-Reducer.js","componets/Users/Users.module.css","componets/Profile/ProfileInfo/ProfileInfo.module.css","componets/Profile/MyPosts/Post/Post.module.css","reportWebVitals.js","componets/Navbar/Navbar.jsx","componets/News/News.jsx","componets/Music/Music.jsx","utils/object-helpers.js","redux/users-Reducer.js","componets/Paginator/Paginator.jsx","assets/images/user.png","componets/Users/User.jsx","componets/Users/Users.jsx","assets/images/Blocks-1s-200px.svg","componets/Preloader/Preloader.js","redux/users-selectors.js","componets/Users/UsersContainer.jsx","assets/images/notWork.jpg","componets/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","componets/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-Reducer.js","componets/Profile/MyPosts/Post/Post.jsx","componets/Profile/MyPosts/MyPosts.jsx","componets/Profile/MyPosts/MyPostsContainer.jsx","componets/Profile/Profile.jsx","componets/Profile/ProfileContainer.jsx","assets/images/logo/logo.png","componets/Header/Header.jsx","componets/Header/HeaderContainer.jsx","redux/app-Reducer.js","redux/navbar-Reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","followAPI","deleteUnfollow","delete","postFollow","post","authAPI","getAuthMe","login","email","password","rememberMe","logout","module","exports","SET_USER_DATA","SET_LOGIN_SUCCESS","initialState","isAuth","loginSuccess","error","setAuthUserData","type","payload","setLoginSuccess","getAuthUserData","dispatch","a","resultCode","id","messages","authReducer","state","action","required","value","maxLengthCreator","maxLength","length","minLengthCreator","minLength","Textarea","onBlur","onChange","props","className","styles","formControl","errors","SEND_MESSAGE","dialogs","name","message","sendMessageCreator","newMessageBody","dialogsReducer","body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","s","nav","item","to","activeClassName","activeLink","News","Music","updateObjectInArray","items","itemId","objPropNamem","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","index","selectedPage","e","User","user","unfollow","follow","src","photos","small","userPhoto","disabled","some","Users","Preloader","preloader","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","this","createPages","React","Component","compose","connect","bind","totalCount","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","currentTarget","autoFocus","ProfileInfo","profile","large","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","aboutMe","lookingForAJob","notWork","lookingForAJobDescription","fullName","ADD_POST","SER_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profileReducer","newPost","newPostText","postId","Post","likeCount","MyPosts","memo","postsElements","postsBlock","onSubmit","values","addPost","messangBlock","AddNewPostForm","useForm","register","handleSubmit","formState","slc","htmlFor","validate","placeholder","role","btn","MyPostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","match","params","authorizedUserId","history","getUserProfile","auth","withRouter","Header","header","logoPhoto","loginBlock","HeaderComponent","HeaderContainer","INITIALIZED_SUCCESS","initialized","appReducer","navbarReducer","reducers","combineReducers","messagesPage","navbarPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","Login","Settings","App","initializeApp","path","render","UsersContainer","AppContainer","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById"],"mappings":"uGAAA,oJAEMA,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACL,UAAW,0CAINC,EAAW,CACpBC,SADoB,SACXC,EAAaC,GAClB,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IAClDE,MAAK,SAAAC,GACF,OAAOA,EAASC,SAG5BC,WAPoB,SAOTC,GAEP,OADAC,QAAQC,KAAK,8CACNC,EAAWJ,WAAWC,KAIxBG,EAAa,CACtBJ,WADsB,SACXC,GACP,OAAOd,EAASS,IAAI,WAAaK,IAGrCI,UALsB,SAKZJ,GACN,OAAOd,EAASS,IAAI,kBAAoBK,IAG5CK,aATsB,SASTC,GACT,OAAOpB,EAASqB,IAAI,kBAAmB,CAACD,OAAQA,MAK3CE,EAAY,CACrBC,eADqB,SACNT,GACX,OAAOd,EAASwB,OAAT,iBAA0BV,KAIrCW,WANqB,SAMVX,GACP,OAAOd,EAAS0B,KAAT,iBAAwBZ,MAI1Ba,EAAU,CACnBC,UADmB,WAEf,OAAO5B,EAASS,IAAT,YAGXoB,MALmB,SAKbC,EAAOC,GAA+B,IAArBC,EAAoB,wDACvC,OAAOhC,EAAS0B,KAAT,aAA4B,CAAEI,QAAOC,WAAUC,gBAE1DC,OARmB,WASf,OAAOjC,EAASwB,OAAT,iB,mBCzDfU,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,2BAA2B,UAAY,0BAA0B,WAAa,6B,gLCC7JC,EAAgB,qBAChBC,EAAoB,yBAGtBC,EAAe,CACfxB,OAAQ,KACRgB,MAAO,KACPD,MAAO,KACPU,QAAQ,EACRC,cAAc,EACdC,MAAO,IA0BEC,EAAkB,SAAC5B,EAAQgB,EAAOD,EAAOU,GAAvB,MAAmC,CAC9DI,KAAMP,EAAeQ,QACjB,CAAC9B,SAAQgB,QAAOD,QAAOU,YAElBM,EAAkB,SAACL,EAAcC,GAAf,MAA0B,CACrDE,KAAMN,EAAmBG,eAAcC,UAG9BK,EAAkB,yDAAM,WAAOC,GAAP,uBAAAC,EAAA,sEACZrB,IAAQC,YADI,OAGA,KAF7BjB,EAD6B,QAGpBC,KAAKqC,aAAmB,EACRtC,EAASC,KAAKA,KAAlCsC,EAD2B,EAC3BA,GAAIrB,EADuB,EACvBA,MAAOC,EADgB,EAChBA,MAChBiB,EAASL,EAAgBQ,EAAIpB,EAAOD,GAAO,KALd,2CAAN,uDASlBA,EAAQ,SAACC,EAAOC,EAAUC,GAAlB,8CAAiC,WAAMe,GAAN,eAAAC,EAAA,sEACjCrB,IAAQE,MAAMC,EAAOC,EAAUC,GADE,OAG1B,KAFpBpB,EAD8C,QAGzCqC,YACLF,EAASF,GAAgB,IACzBE,EAASD,MAETC,EAASF,GAAgB,EAAOjC,EAAKA,KAAKuC,SAAS,KAPL,2CAAjC,uDAWRlB,EAAS,yDAAM,WAAOc,GAAP,SAAAC,EAAA,sEACHrB,IAAQM,SADL,OAGS,IAHT,OAGXrB,KAAKqC,YACdF,EAASL,EAAgB,KAAM,KAAM,MAAM,IAJvB,2CAAN,uDASPU,IA5DK,WAAmC,IAAlCC,EAAiC,uDAAzBf,EAAcgB,EAAW,uCAGlD,OAAQA,EAAOX,MACX,KAAKP,EACD,OAAO,2BACAiB,GACAC,EAAOV,SAElB,KAAKP,EACD,OAAO,2BACAgB,GADP,IAEIb,aAAcc,EAAOd,aACrBC,MAAOa,EAAOb,QAItB,QACI,OAAOY,K,mBChCnBnB,EAAOC,QAAU,CAAC,WAAa,4BAA4B,aAAe,8BAA8B,IAAM,qBAAqB,IAAM,uB,gCCDzI,sGAAO,IAAMoB,EAAW,SAAAC,GACpB,IAAIA,EAEJ,MAAO,qBAGEC,EAAmB,SAAAC,GAAS,OAAI,SAACF,GAC1C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,cAIrBE,EAAmB,SAAAC,GAAS,OAAI,SAACL,GAC1C,GAAIA,EAAMG,OAASE,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCXlC3B,EAAOC,QAAU,CAAC,UAAY,6BAA6B,aAAe,gCAAgC,oBAAsB,yC,wCCAhID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,2BAA2B,WAAa,6B,4GCE1F2B,EAAW,SAACC,EAAQC,GAAwB,IAAD,uBAAVC,EAAU,iCAAVA,EAAU,kBACpD,OACI,qBAAKC,UAAWC,IAAOC,YAAc,IAAMD,IAAOE,OAAlD,SACI,oDAAcN,GAAYE,Q,oFCNhCK,EAAe,eAEjBhC,EAAe,CACfiC,QAAS,CACL,CAACrB,GAAI,EAAGsB,KAAM,QACd,CAACtB,GAAI,EAAGsB,KAAM,UACd,CAACtB,GAAI,EAAGsB,KAAM,SACd,CAACtB,GAAI,EAAGsB,KAAM,QACd,CAACtB,GAAI,EAAGsB,KAAM,SAElBrB,SAAU,CACN,CAACD,GAAI,EAAGuB,QAAS,MACjB,CAACvB,GAAI,EAAGuB,QAAS,6BACjB,CAACvB,GAAI,EAAGuB,QAAS,MACjB,CAACvB,GAAI,EAAGuB,QAAS,MACjB,CAACvB,GAAI,EAAGuB,QAAS,QAiBZC,EAAqB,SAACC,GAAD,MAAqB,CAAChC,KAAM2B,EAAcK,mBAG7DC,IAhBQ,WAAmC,IAAlCvB,EAAiC,uDAAzBf,EAAcgB,EAAW,uCACrD,OAAQA,EAAOX,MACX,KAAK2B,EACD,IAAIO,EAAOvB,EAAOqB,eAClB,OAAO,2BACAtB,GADP,IAEIF,SAAS,GAAD,mBAAME,EAAMF,UAAZ,CAAsB,CAACD,GAAI,EAAGuB,QAASI,OAEvD,QACI,OAAOxB,K,mBC3BnBnB,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,QAAU,+B,mBCA3ED,EAAOC,QAAU,CAAC,KAAO,qB,sGCDzB,IAYe2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtE,MAAK,YAAkD,IAA/CuE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gHC2BCO,EA7BA,SAACrB,GAGZ,OACI,sBAAKC,UAAWqB,IAAEC,IAAlB,UACI,qBAAKtB,UAAWqB,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,WAA1C,uBAEJ,qBAAK1B,UAAWqB,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,WAA1C,wBAEJ,qBAAK1B,UAAWqB,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,WAAxC,qBAEJ,qBAAK1B,UAAWqB,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,QAAQC,gBAAiBJ,IAAEK,WAAvC,oBAEJ,qBAAK1B,UAAWqB,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBJ,IAAEK,WAA3C,wBAEJ,qBAAK1B,UAAWqB,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,WAAxC,yBCfDC,G,MARF,SAAC5B,GACV,OACI,yCCKO6B,EARD,SAAC7B,GACX,OACI,yC,4DCJK8B,EAAsB,SAACC,EAAOC,EAAQC,EAAcC,GAC7D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAEH,KAAkBD,EACb,2BAAII,GAAMF,GAEdE,MCFTC,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAA+B,+BAEjCtE,EAAe,CACfuE,MAAO,GACPrG,SAAU,GACVsG,gBAAiB,EACjBvG,YAAa,EACbwG,YAAY,EACZC,oBAAqB,IAsDZC,EAAgB,SAACnG,GAAD,MAAa,CAAC6B,KAAM2D,EAAQxF,WAC5CoG,EAAkB,SAACpG,GAAD,MAAa,CAAC6B,KAAM4D,EAAUzF,WAEhDqG,EAAiB,SAAC5G,GAAD,MAAkB,CAACoC,KAAM8D,EAAkBlG,gBAE5D6G,EAAmB,SAACL,GAAD,MAAiB,CAACpE,KAAMgE,EAAoBI,eAC/DM,EAA0B,SAACN,EAAYjG,GAAb,MAAyB,CAC5D6B,KAAMiE,EACNG,aACAjG,WAkBEwG,EAAkB,uCAAG,WAAOvE,EAAUjC,EAAQyG,EAAWC,GAApC,SAAAxE,EAAA,6DACvBD,EAASsE,GAAwB,EAAMvG,IADhB,SAEFyG,EAAUzG,GAFR,OAIK,IAJL,OAIVmC,YACTF,EAASyE,EAAc1G,IAE3BiC,EAASsE,GAAwB,EAAOvG,IAPjB,2CAAH,4DAuBT2G,EApGM,WAAmC,IAAlCpE,EAAiC,uDAAzBf,EAAcgB,EAAW,uCAGnD,OAAQA,EAAOX,MACX,KAAK2D,EACD,OAAO,2BACAjD,GADP,IAEIwD,MAAOd,EAAoB1C,EAAMwD,MAAO,KAAMvD,EAAOxC,OAAQ,CAAC4G,UAAU,MAShF,KAAKnB,EACD,OAAO,2BACAlD,GADP,IAEIwD,MAAOd,EAAoB1C,EAAMwD,MAAO,KAAMvD,EAAOxC,OAAQ,CAAC4G,UAAU,MAIhF,KAAKlB,EACD,OAAO,2BAAInD,GAAX,IAAkBwD,MAAOvD,EAAOuD,QAEpC,KAAKJ,EACD,OAAO,2BAAIpD,GAAX,IAAkB9C,YAAa+C,EAAO/C,cAE1C,KAAKmG,EACD,OAAO,2BAAIrD,GAAX,IAAkByD,gBAAiBxD,EAAOqE,QAE9C,KAAKhB,EACD,OAAO,2BAAItD,GAAX,IAAkB0D,WAAYzD,EAAOyD,aAEzC,KAAKH,EACD,OAAO,2BACAvD,GADP,IAEI2D,oBAAqB1D,EAAOyD,WAAP,sBACX1D,EAAM2D,qBADK,CACgB1D,EAAOxC,SACtCuC,EAAM2D,oBAAoBY,QAAO,SAAA1E,GAAE,OAAIA,GAAMI,EAAOxC,YAIlE,QACI,OAAOuC,I,iCCSJwE,EAvEG,SAAC,GAKf,IALsF,IAAtEtH,EAAqE,EAArEA,YAAaC,EAAwD,EAAxDA,SAAUsH,EAA8C,EAA9CA,gBAAiBC,EAA6B,EAA7BA,cAEpDC,GAFiF,4EAEpEC,KAAKC,KAAKJ,EAAkBtH,IACzC2H,EAAQ,GAEHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAIE,EAAeL,KAAKC,KAAKF,EAAaxH,GAT2C,EAU7C+H,mBAAS,GAVoC,mBAUhFC,EAVgF,KAUjEC,EAViE,KAWjFC,GAAyBF,EAAgB,GAAKhI,EAAW,EACzDmI,EAAyBH,EAAgBhI,EAG7C,OAAO,sBAAK0D,UAAWC,IAAOyE,UAAvB,UACDJ,EAAgB,GAClB,wBAAQK,QAAS,WAAQJ,EAAiBD,EAAgB,IAA1D,kBAECL,EACIP,QAAO,SAAAkB,GAAC,OAAIA,GAAKJ,GAAyBI,GAAGH,KAC7CvC,KAAI,SAAC0C,EAAGC,GACL,OAAO,sBAAM7E,UAAW3D,IAAgBuI,GAAK3E,IAAO6E,aAEvCH,QAAS,SAACI,GACNlB,EAAce,IAHxB,SAIUA,GAHCC,MAKxBT,EAAeE,GACjB,wBAAQK,QAAS,WAAQJ,EAAiBD,EAAgB,IAA1D,sB,iBCjCO,MAA0B,iCC+C1BU,EAzCJ,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,KAAMnC,EAA2C,EAA3CA,oBAAqBoC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,OAE9C,OACI,gCACI,iCACI,8BACI,cAAC,IAAD,CAAS3D,GAAI,YAAcyD,EAAKjG,GAAhC,SACI,qBAAKoG,IAA0B,MAArBH,EAAKI,OAAOC,MAAgBL,EAAKI,OAAOC,MAAQC,EACrDvF,UAAWqB,IAAEkE,gBAI1B,8BACKN,EAAKzB,SACA,wBAAQgC,SAAU1C,EAAoB2C,MAAK,SAAAzG,GAAE,OAAIA,IAAOiG,EAAKjG,MACrD2F,QAAS,WACLO,EAASD,EAAKjG,KAF1B,sBAKA,wBAAQwG,SAAU1C,EAAoB2C,MAAK,SAAAzG,GAAE,OAAIA,IAAOiG,EAAKjG,MACrD2F,QAAS,WACLQ,EAAOF,EAAKjG,KAFxB,yBAQd,iCACQ,iCACI,8BAAMiG,EAAK3E,OACX,8BAAM2E,EAAK/H,YAEf,iCACI,8BAAM,uBACN,8BAAM,8BCbfwI,EAtBH,SAAC,GAOO,IANH9C,EAME,EANFA,gBACAtG,EAKE,EALFA,SACAD,EAIE,EAJFA,YACAwH,EAGE,EAHFA,cACAlB,EAEE,EAFFA,MACG5C,EACD,oFAEf,OAAO,gCACH,cAAC,EAAD,CAAW6D,gBAAiBhB,EAAiBtG,SAAUA,EAAUD,YAAaA,EACnEwH,cAAeA,IAEtBlB,EAAMT,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAM8C,KAAM9C,EACNW,oBAAqB/C,EAAM+C,oBAC3BoC,SAAUnF,EAAMmF,SAChBC,OAAQpF,EAAMoF,QACThD,EAAEnD,WCtBzB,MAA0B,4CCW1B2G,GARC,SAAC5F,GACb,OACI,8BACI,qBAAKqF,IAAKQ,O,SCNTxJ,GAAW,SAAC+C,GACrB,OAAOA,EAAM0G,UAAUlD,OAEdmD,GAAc,SAAC3G,GACxB,OAAOA,EAAM0G,UAAUvJ,UAEdyJ,GAAqB,SAAC5G,GAC/B,OAAOA,EAAM0G,UAAUjD,iBAEdoD,GAAiB,SAAC7G,GAC3B,OAAOA,EAAM0G,UAAUxJ,aAEd4J,GAAgB,SAAC9G,GAC1B,OAAOA,EAAM0G,UAAUhD,YAEdqD,GAAyB,SAAC/G,GACnC,OAAOA,EAAM0G,UAAU/C,qBCDrBqD,G,4MAQFtC,cAAgB,SAACxH,GAAiB,IACtBC,EAAa,EAAKyD,MAAlBzD,SACR,EAAKyD,MAAM3D,SAASC,EAAaC,I,uDAPrC,WAAqB,IAAD,EACgB8J,KAAKrG,MAA9B1D,EADS,EACTA,YAAaC,EADJ,EACIA,SACpB8J,KAAKrG,MAAM3D,SAASC,EAAaC,K,oBASrC,WAEI,OAAO,qCACF8J,KAAKrG,MAAM8C,WAAa,cAAC,GAAD,IAAe,KACxC,cAAC,EAAD,CAAOD,gBAAiBwD,KAAKrG,MAAM6C,gBAC5BtG,SAAU8J,KAAKrG,MAAMzD,SACrBD,YAAa+J,KAAKrG,MAAM1D,YACxBwH,cAAeuC,KAAKvC,cACpBlB,MAAOyD,KAAKrG,MAAM4C,MAClBwC,OAAQiB,KAAKrG,MAAMoF,OACnBD,SAAUkB,KAAKrG,MAAMmF,SACrBmB,YAAaD,KAAKzC,UAClBb,oBAAqBsD,KAAKrG,MAAM+C,6B,GA1BnBwD,IAAMC,WA8CvBC,gBACXC,aAbkB,SAACtH,GACnB,MAAO,CACHwD,MAAOvG,GAAS+C,GAChB7C,SAAUwJ,GAAY3G,GACtByD,gBAAiBmD,GAAmB5G,GACpC9C,YAAa2J,GAAe7G,GAC5B0D,WAAYoD,GAAc9G,GAC1B2D,oBAAqBoD,GAAuB/G,MAMvB,CACrBgG,OR6Cc,SAACvI,GACnB,8CAAO,WAAOiC,GAAP,SAAAC,EAAA,sDACHsE,EAAmBvE,EAAUjC,EAAQQ,IAAUG,WAAWmJ,KAAKtJ,KAAY2F,GADxE,2CAAP,uDQ9CYmC,SRmDQ,SAACtI,GACrB,8CAAO,WAAOiC,GAAP,SAAAC,EAAA,sDACHsE,EAAmBvE,EAAUjC,EAAQQ,IAAUC,eAAeqJ,KAAKtJ,KAAY4F,GAD5E,2CAAP,uDQnDIG,0BAAyB/G,SRmBL,SAACC,EAAaC,GACtC,8CAAO,WAAOuC,GAAP,eAAAC,EAAA,6DAEHD,EAASqE,GAAiB,IAC1BrE,EAASoE,EAAe5G,IAHrB,SAIcF,IAASC,SAASC,EAAaC,GAJ7C,OAICI,EAJD,OAMHmC,EAASqE,GAAiB,IAC1BrE,GAlBiB8D,EAkBCjG,EAAKoF,MAlBK,CAACrD,KAAM6D,EAAWK,WAmB9C9D,GAjB2B+D,EAiBClG,EAAKiK,WAjBe,CAAClI,KAAM+D,EAAuBiB,MAAOb,KASlF,iCATuB,IAACA,EAFVD,IAWd,OAAP,yDQvBW6D,CAKbL,I,oBClEa,OAA0B,oCC2C1BS,GAzCgB,SAAC7G,GAAW,IAAD,EAERsE,oBAAS,GAFD,mBAEjCwC,EAFiC,KAEvBC,EAFuB,OAGZzC,mBAAStE,EAAM7C,QAHH,mBAGjCA,EAHiC,KAGzB6J,EAHyB,KAKtCC,qBAAU,WACND,EAAUhH,EAAM7C,UACjB,CAACA,IAgBJ,OACI,iCACM2J,GACF,8BACI,sBAAMI,cAlBO,WACrBH,GAAY,IAiBJ,SAAwC/G,EAAM7C,QAAU,YAG3D2J,GACD,8BACI,uBAAO/G,SAbI,SAACiF,GACpBgC,EAAUhC,EAAEmC,cAAc5H,QAYe6H,WAAW,EAAMtH,OAlBnC,WACvBiH,GAAY,GACZ/G,EAAM9C,aAAaC,IAiBJoC,MAAOpC,UCOfkK,GAnCK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASnK,EAA0B,EAA1BA,OAAQD,EAAkB,EAAlBA,aACnC,OAAKoK,EAID,gCACI,+BACI,gCAEI,qBAAKjC,IAAKiC,EAAQhC,OAAOiC,QACzB,cAAC,GAAD,CAAwBpK,OAAQA,EAAQD,aAAcA,SAG9D,qGACI,gCACI,8BAAMoK,EAAQE,SAASC,WACvB,8BAAMH,EAAQE,SAASE,UACvB,8BAAMJ,EAAQE,SAASG,KACvB,8BAAML,EAAQE,SAASI,UACvB,8BAAMN,EAAQE,SAASK,YACvB,8BAAMP,EAAQE,SAASM,UACvB,8BAAMR,EAAQE,SAASO,SACvB,8BAAMT,EAAQE,SAASQ,cAE/B,uEACA,iCACI,8BAAMV,EAAQW,UACd,8BAAgC,GAA1BX,EAAQY,eAAyBZ,EAAQY,eAAgB,qBAAKjI,UAAWqB,KAAE6G,QAAS9C,IAAK8C,OAC/F,8BAAMb,EAAQc,4BACd,8BAAMd,EAAQe,iBA3Bf,cAAC,GAAD,KCPTC,GAAW,WACXC,GAAmB,mBACnB7F,GAAqB,qBACrB8F,GAAa,aACbC,GAAc,cAGhBpK,GAAe,CACfqK,MAAO,CACH,CAACzJ,GAAI,EAAGuB,QAAS,mBAAoBmI,WAAY,IACjD,CAAC1J,GAAI,EAAGuB,QAAS,qBAAuBmI,WAAY,IACpD,CAAC1J,GAAI,EAAGuB,QAAS,SAAUmI,WAAY,IACvC,CAAC1J,GAAI,EAAGuB,QAAS,OAAQmI,WAAY,KAEzCrB,QAAS,KACTnK,OAAQ,IAsCC6J,GAAY,SAAC7J,GAAD,MAAa,CAACuB,KAAM8J,GAAYrL,WA0B1CyL,GA7DQ,WAAmC,IAAlCxJ,EAAiC,uDAAzBf,GAAcgB,EAAW,uCAErD,OAAQA,EAAOX,MACX,KAAK4J,GACD,IAAIO,EAAU,CACV5J,GAAI,EACJuB,QAASnB,EAAOyJ,YAChBH,WAAY,GAEhB,OAAO,2BACAvJ,GADP,IAEIsJ,MAAM,GAAD,mBAAMtJ,EAAMsJ,OAAZ,CAAmBG,IACxBC,YAAa,KAGrB,KAAKP,GACD,OAAO,2BAAInJ,GAAX,IAAkBkI,QAASjI,EAAOiI,UAEtC,KAAK5E,GACD,OAAO,2BAAItD,GAAX,IAAkB0D,WAAYzD,EAAOyD,aAEzC,KAAK0F,GACD,OAAO,2BAAIpJ,GAAX,IAAkBjC,OAAQkC,EAAOlC,SAErC,KAAKsL,GACD,OAAO,2BAAIrJ,GAAX,IAAkBsJ,MAAOtJ,EAAMsJ,MAAM/E,QAAO,SAAAkB,GAAC,OAAIA,EAAE5F,IAAMI,EAAO0J,YACpE,QACI,OAAO3J,I,wCChCJ4J,GAZF,SAAChJ,GACV,OACI,sBAAKC,UAAWqB,KAAE7D,KAAlB,UACI,qBAAK4H,IAAI,mFACRrF,EAAMQ,QACP,8BACI,iCAAOR,EAAMiJ,UAAb,iB,2BCDVC,GAAU3C,IAAM4C,MAAK,SAAAnJ,GACvB,IAAIoJ,EACApJ,EAAM0I,MAAMvG,KAAI,SAAC0C,EAAG5F,GAAJ,OAAW,cAAC,GAAD,CAAMuB,QAASqE,EAAErE,QAAkByI,UAAWpE,EAAE8D,YAAjB1J,MAQ9D,OACI,sBAAKgB,UAAWqB,KAAE+H,WAAlB,UACI,yCACA,8BACI,cAAC,GAAD,CAAgBC,SARZ,SAACC,GACbvJ,EAAMwJ,QAAQD,EAAOT,kBASjB,qBAAK7I,UAAWqB,KAAEmI,aAAlB,SACKL,UAMX3J,GAAYD,aAAiB,IAE7BkK,GAAiB,SAAC1J,GAAW,IAAD,EACwB2J,eAA/CC,EADuB,EACvBA,SAAUC,EADa,EACbA,aAA0BzJ,EADb,EACC0J,UAAY1J,OAE3C,OACI,uBAAMkJ,SAAUO,EAAa7J,EAAMsJ,UAAnC,UACI,sBAAKrJ,UAAWqB,KAAEyI,IAAlB,UACI,uBAAOC,QAAQ,aACf,cAAC,KAAD,yBACI/K,GAAG,YACC2K,EAAS,cAAe,CAExBK,SAAU,CAAC3K,cAAUG,iBAJ7B,IAOIf,KAAK,WACLwL,YAAY,wBACf9J,EAAO0I,aAAe,sBAAMqB,KAAK,QAAX,SAAoB/J,EAAO0I,YAAYtI,aAElE,8BACI,wBAAQP,UAAWqB,KAAE8I,IAArB,wBAODlB,MCrCAmB,GAFU3D,aAdH,SAACtH,GACnB,MAAO,CACHsJ,MAAOtJ,EAAMkL,YAAY5B,MACzBI,YAAa1J,EAAMkL,YAAYxB,gBAGd,SAAChK,GACtB,MAAO,CACH0K,QAAS,SAACV,GACNhK,EHsCwB,SAACgK,GAAD,MAAkB,CAACpK,KAAM4J,GAAUQ,eGtClDyB,CAAqBzB,QAKjBpC,CAA6CwC,ICJvDsB,GAXC,SAACxK,GAEb,OAAO,8BACH,gCACI,cAAC,GAAD,CAAasH,QAAStH,EAAMsH,QAASnK,OAAQ6C,EAAM7C,OAAQD,aAAc8C,EAAM9C,eAC/E,cAAC,GAAD,UCHNuN,G,uKAEF,WACI,IAAI5N,EAASwJ,KAAKrG,MAAM0K,MAAMC,OAAO9N,OAChCA,IACDA,EAASwJ,KAAKrG,MAAM4K,mBAEhBvE,KAAKrG,MAAM6K,QAAQzG,KAAK,UAGhCiC,KAAKrG,MAAM8K,eAAejO,GAC1BwJ,KAAKrG,MAAM/C,UAAUJ,K,oBAGzB,WACI,OACI,cAAC,GAAD,2BAAawJ,KAAKrG,OAAlB,IACSsH,QAASjB,KAAKrG,MAAMsH,QACpBnK,OAAQkJ,KAAKrG,MAAM7C,OACnBD,aAAcmJ,KAAKrG,MAAM9C,oB,GAnBfqJ,IAAMC,WA+BtBC,gBACXC,aARkB,SAACtH,GAAD,MAAY,CAC9BkI,QAASlI,EAAMkL,YAAYhD,QAC3BnK,OAAQiC,EAAMkL,YAAYnN,OAC1ByN,iBAAkBxL,EAAM2L,KAAKlO,OAC7ByB,OAAQc,EAAM2L,KAAKzM,UAIM,CAACwM,eLmBA,SAACjO,GAAD,8CAAY,WAAOiC,GAAP,eAAAC,EAAA,sEACjB3C,IAASQ,WAAWC,GADH,OAClCH,EADkC,OAGtCoC,GAP2BwI,EAOH5K,EAASC,KAPO,CAAC+B,KAAM6J,GAAkBjB,aAI3B,iCAJZ,IAACA,IAIW,OAAZ,uDKnBgBrK,UL0BrB,SAACJ,GAAD,8CAAY,WAAOiC,GAAP,eAAAC,EAAA,sEACZ/B,IAAWC,UAAUJ,GADT,OAC7BH,EAD6B,OAGjCoC,EAASkI,GAAUtK,EAASC,OAHK,2CAAZ,uDK1BgCO,aLiC7B,SAACC,GAAD,8CAAY,WAAO2B,GAAP,SAAAC,EAAA,sEACf/B,IAAWE,aAAaC,GADT,OAGH,IAHG,OAGvBR,KAAKqC,YACdF,EAASkI,GAAU7J,IAJa,2CAAZ,yDKhCxB6N,IAFWvE,CAGbgE,I,oBCzCa,OAA0B,iCCmB1BQ,GAdA,SAACjL,GACZ,OAAO,yBAAQC,UAAWqB,KAAE4J,OAArB,UACH,qBAAK7F,IAAK8F,KAEV,qBAAKlL,UAAWqB,KAAE8J,WAAlB,SACKpL,EAAM1B,OACD,oCAAO0B,EAAMpC,MAAb,MAAsB,wBAAQgH,QAAS5E,EAAMhC,OAAvB,qBAAtB,OACA,cAAC,IAAD,CAASyD,GAAI,SAAb,yB,SCPZ4J,G,4JAEF,WACI,OAAO,cAAC,GAAD,eAAYhF,KAAKrG,Y,GAHFuG,IAAMC,WAerB8E,GAFS5E,aAPF,SAACtH,GACnB,MAAO,CACHd,OAAQc,EAAM2L,KAAKzM,OACnBV,MAAOwB,EAAM2L,KAAKnN,SAIuB,CAACI,aAA1B0I,CAAmC2E,IChBrDE,GAAsB,sBAGxBlN,GAAe,CACfmN,aAAa,GAgCFC,GA7BI,WAAmC,IAAlCrM,EAAiC,uDAAzBf,GAAcgB,EAAW,uCACjD,OAAQA,EAAOX,MACX,KAAK6M,GACD,OAAO,2BACAnM,GADP,IAEIoM,aAAa,IAIrB,QACI,OAAOpM,I,SCnBff,GAAe,GAWJqN,GAPO,WAAmC,IAAlCtM,EAAiC,uDAAzBf,GAI3B,OAAOe,G,SCCPuM,GAAWC,aAAgB,CAC3BtB,YAAa1B,GACbiD,aAAclL,KACdmL,WAAYJ,GACZ5F,UAAWtC,EACXuH,KAAM5L,KACN4M,IAAKN,KAGHO,GAAmBC,OAAOC,sCAAwCzF,KAClE0F,GAAQC,aAAYT,GAAUK,GAAiBK,aAAgBC,QAIrEL,OAAOM,UAAYJ,GAEJA,UCtBFK,GAAe,SAAChG,GACzB,OAAO,SAACxG,GACJ,OAAO,cAAC,IAAMyM,SAAP,CAAgBC,SAAU,cAAC,GAAD,IAA1B,SACH,cAAClG,EAAD,eAAgBxG,QCatB2M,GAAmBpG,IAAMqG,MAAK,kBAAM,gCACpCC,GAAQtG,IAAMqG,MAAK,kBAAM,gCACzBE,GAAWvG,IAAMqG,MAAK,kBAAM,gCAG5BG,G,uKACF,WACI1G,KAAKrG,MAAMgN,kB,oBAGf,WACI,OAAK3G,KAAKrG,MAAMwL,YAKZ,sBAAKvL,UAAU,cAAf,UACI,cAAC,GAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACI,cAAC,IAAD,CAAOgN,KAAK,WACLC,OAAQV,GAAaG,MAE5B,cAAC,IAAD,CAAOM,KAAK,oBACLC,OAAQ,kBAAM,cAAC,GAAD,OACrB,cAAC,IAAD,CAAOD,KAAK,SACLC,OAAQ,kBAAM,cAAC,EAAD,OACrB,cAAC,IAAD,CAAOD,KAAK,QACLC,OAAQ,kBAAM,cAAC,EAAD,OACrB,cAAC,IAAD,CAAOD,KAAK,YACLC,OAAQV,GAAaM,MAC5B,cAAC,IAAD,CAAOG,KAAK,SACLC,OAAQ,kBAAM,cAACC,GAAD,OACrB,cAAC,IAAD,CAAOF,KAAK,SACLC,OAAQV,GAAaK,YAtB7B,cAAC,GAAD,Q,GAPDtG,IAAMC,WA2CpB4G,GAAe3G,aACfuE,IACAtE,aATkB,SAACtH,GACnB,MAAO,CACHoM,YAAapM,EAAM2M,IAAIP,eAOF,CAACwB,cJ1CD,kBAAM,SAAClO,GAChC,IAAIuO,EAAUvO,EAASD,gBAEvByO,QAAQC,IAAK,CAACF,IACT5Q,MAAK,WACNqC,EARiC,CAACJ,KAAM6M,YI2C7B9E,CAE4BsG,IAWhCS,GARM,SAACxN,GAClB,OAAO,cAAC,IAAD,UACH,cAAC,IAAD,CAAUmM,MAAOA,GAAjB,SACI,cAACiB,GAAD,SCpEZK,IAASP,OAAO,cAAC,GAAD,IAAiBQ,SAASC,eAAe,SAMzD9M,M","file":"static/js/main.9b5d6b7d.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"2340d0bf-bf92-494a-87c8-2cc6e51ce1ac\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPi object.')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/' + userId);\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put('profile/status/', {status: status});\r\n    }\r\n\r\n};\r\n\r\nexport const followAPI = {\r\n    deleteUnfollow(userId) {\r\n        return instance.delete(`follow/${userId}`);\r\n\r\n    },\r\n\r\n    postFollow(userId) {\r\n        return instance.post(`follow/${userId}`);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    getAuthMe() {\r\n        return instance.get(`auth/me`);\r\n\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__39CnN\",\"item\":\"Navbar_item__2oh2E\",\"activeLink\":\"Navbar_activeLink__2DVsv\",\"container\":\"Navbar_container__Cforu\",\"navFriends\":\"Navbar_navFriends__10ViD\"};","import {authAPI} from \"../Api/Api\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst SET_LOGIN_SUCCESS = 'auth/SET_LOGIN_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    loginSuccess: true,\r\n    error: \"\"\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case SET_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loginSuccess: action.loginSuccess,\r\n                error: action.error\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\nexport const setLoginSuccess = (loginSuccess, error) => ({\r\n    type: SET_LOGIN_SUCCESS, loginSuccess, error\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.getAuthMe();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async dispatch => {\r\n    let data = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(setLoginSuccess(true))\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        dispatch(setLoginSuccess(false, data.data.messages[0]))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__39Byo\",\"messangBlock\":\"MyPosts_messangBlock__3R1cX\",\"slc\":\"MyPosts_slc__lSCEt\",\"btn\":\"MyPosts_btn__30pZR\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = maxLength => (value) =>{\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}\r\n\r\nexport const minLengthCreator = minLength => (value) =>{\r\n    if (value.length < minLength) return `Min length is ${minLength} symbols`\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__27uHc\",\"selectedPage\":\"Paginator_selectedPage__1vhq4\",\"selectedPagesDefold\":\"Paginator_selectedPagesDefold__t6EJV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__i6Mmh\",\"loginBlock\":\"Header_loginBlock__3EuLv\",\"activeLink\":\"Header_activeLink__1R9u2\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.model.css\"\r\n\r\nexport const Textarea = (onBlur, onChange, ...props) => {\r\n    return (\r\n        <div className={styles.formControl + \" \" + styles.errors}>\r\n            <textarea {...onBlur} {...props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = () => {\r\n\r\n}","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Izum'},\r\n        {id: 2, name: 'Daniel'},\r\n        {id: 3, name: 'Ivana'},\r\n        {id: 4, name: 'Vasa'},\r\n        {id: 5, name: 'Peta'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__vnpdw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileinfo\":\"ProfileInfo_profileinfo__3VW0Q\",\"notWork\":\"ProfileInfo_notWork__1jElL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__31OLJ\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","export const updateObjectInArray = (items, itemId, objPropNamem, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropNamem] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {followAPI, usersAPI} from \"../Api/Api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, \"id\", action.userId, {followed: true})\r\n               /* users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })*/\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, \"id\", action.userId, {followed: false})\r\n\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, followAPI.postFollow.bind(followAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, followAPI.deleteUnfollow.bind(followAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\n\r\n\r\nconst Paginator = ({currentPage, pageSize, totalItemsCount, onPageChanged, ...props}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / pageSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * pageSize + 1;\r\n    let rightPortionPageNumber = portionNumber * pageSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p, index) => {\r\n                return <span className={currentPage === p && styles.selectedPage}\r\n                             key={index}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\n/*    Pages(pages, pagesCount, currentPage);\r\n\r\n\r\n    return (\r\n        <div className={style.selectedPagesDefold}>\r\n            {pages.map((p, index) => {\r\n                return <span key={index}\r\n                             className={currentPage === p && style.selectedPage}\r\n                             onClick={(event) => {\r\n                                onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Pages = (pages, pagesCount, currentPage) => {\r\n    if (pagesCount > 10) {\r\n        if (currentPage > 5) {\r\n            for (let i = currentPage - 4; i <= currentPage + 4; i++) {\r\n                pages.push(i)\r\n                if (i == pagesCount) break\r\n            }\r\n        } else {\r\n            for (let i = 1; i <= 10; i++) {\r\n                pages.push(i)\r\n                if (i == pagesCount) break\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i)\r\n        }\r\n    }\r\n}*/\r\n\r\nexport default Paginator;\r\n\r\n","export default __webpack_public_path__ + \"static/media/user.574a4dd7.png\";","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={s.userPhoto}/>\r\n                    </NavLink>\r\n\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id)\r\n                                  }\r\n                                  }>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id)\r\n                                  }\r\n                                  }>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n            </span>\r\n        </div>)\r\n\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = ({\r\n                 totalUsersCount,\r\n                 pageSize,\r\n                 currentPage,\r\n                 onPageChanged,\r\n                 users,\r\n                 ...props\r\n             }) => {\r\n\r\n    return <div>\r\n        <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage}\r\n                   onPageChanged={onPageChanged}/>\r\n        {\r\n            users.map(u => <User user={u}\r\n                                 followingInProgress={props.followingInProgress}\r\n                                 unfollow={props.unfollow}\r\n                                 follow={props.follow}\r\n                                 key={u.id}\r\n                />\r\n            )}\r\n    </div>\r\n}\r\nexport default Users;","export default __webpack_public_path__ + \"static/media/Blocks-1s-200px.50145cf1.svg\";","import preloader from '../../assets/images/Blocks-1s-200px.svg';\r\nimport React from 'react';\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {follow, requestUsers, toggleFollowingProgress, unfollow,} from '../../redux/users-Reducer';\r\nimport Users from './Users';\r\nimport Preloader from '../Preloader/Preloader';\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (currentPage) => {\r\n        const { pageSize } = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   createPages={this.Paginator}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow,\r\n        toggleFollowingProgress, getUsers: requestUsers\r\n    }),\r\n)(UsersAPIComponent);","export default __webpack_public_path__ + \"static/media/notWork.b0f16882.jpg\";","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../Preloader/Preloader';\r\nimport notWork from '../../../assets/images/notWork.jpg';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n\r\n                    <img src={profile.photos.large}/>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n            </span>\r\n            <h3>Мои контакты</h3>\r\n                <div>\r\n                    <div>{profile.contacts.facebook}</div>\r\n                    <div>{profile.contacts.website}</div>\r\n                    <div>{profile.contacts.vk}</div>\r\n                    <div>{profile.contacts.twitter}</div>\r\n                    <div>{profile.contacts.instagram}</div>\r\n                    <div>{profile.contacts.youtube}</div>\r\n                    <div>{profile.contacts.github}</div>\r\n                    <div>{profile.contacts.mainLink}</div>\r\n                </div>\r\n            <h3>Обо мне</h3>\r\n            <span>\r\n                <div>{profile.aboutMe}</div>\r\n                <div>{profile.lookingForAJob != true ? profile.lookingForAJob: <img className={s.notWork} src={notWork }/>}</div>\r\n                <div>{profile.lookingForAJobDescription}</div>\r\n                <div>{profile.fullName}</div>\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../Api/Api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SER_USER_PROFILE = 'SER_USER_PROFILE';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SER_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SER_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n\r\n    dispatch(setStatus(response.data));\r\n\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src='https://www.film.ru/sites/default/files/filefield_paths/maxresdefault_1_24.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likeCount} like</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        props.posts.map((p, id) => <Post message={p.message} key={id} likeCount={p.likesCount}/>);\r\n    let newPostElement = React.createRef();\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My post</h3>\r\n            <div>\r\n                <AddNewPostForm onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={s.messangBlock}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength = maxLengthCreator(50);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    const {register, handleSubmit, formState: {errors}} = useForm();\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(props.onSubmit)}>\r\n            <div className={s.slc}>\r\n                <label htmlFor=\"textarea\"/>\r\n                <Textarea\r\n                    id=\"textarea\"\r\n                    {...register(\"newPostText\", {\r\n\r\n                        validate: {required, maxLength}\r\n\r\n                    })}\r\n                    type=\"textarea\"\r\n                    placeholder=\"Enter your message\"/>\r\n                {errors.newPostText && <span role=\"alert\">{errors.newPostText.message}</span>}\r\n            </div>\r\n            <div>\r\n                <button className={s.btn}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profile-Reducer';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-Reducer\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.3e5b2452.png\";","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport logoPhoto from '../../assets/images/logo/logo.png'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src={logoPhoto}/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div> {props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n\r\n    </header>\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../redux/auth-Reducer';\r\n\r\nclass HeaderComponent extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n};\r\n\r\nconst HeaderContainer = connect(mapStateToProps, {logout})(HeaderComponent);\r\n\r\nexport default HeaderContainer;","import {getAuthUserData} from \"./auth-Reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all ([promise])\r\n        .then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n\r\n}\r\n\r\n\r\nexport default appReducer;","let initialState = {\n\n};\n\nconst navbarReducer = (state = initialState, action) => {\n\n\n\n    return state;\n}\n\nexport default navbarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from './profile-Reducer';\r\nimport dialogsReducer from './dialogs-Reducer';\r\nimport navbarReducer from './navbar-Reducer';\r\nimport usersReducer from './users-Reducer';\r\nimport authReducer from './auth-Reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from \"./app-Reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    navbarPage: navbarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../componets/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component { ...props}/>\r\n        </React.Suspense>\r\n    };\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './componets/Navbar/Navbar';\r\nimport News from './componets/News/News';\r\nimport Music from './componets/Music/Music';\r\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\r\n\r\nimport UsersContainer from './componets/Users/UsersContainer';\r\nimport ProfileContainer from './componets/Profile/ProfileContainer';\r\nimport HeaderContainer from './componets/Header/HeaderContainer';\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-Reducer\";\r\nimport Preloader from \"./componets/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import ('./componets/Dialogs/DialogsContainer'));\r\nconst Login = React.lazy(() => import('./componets/Login/Login'))\r\nconst Settings = React.lazy(() => import('./componets/Login/Login'))\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer)}/>\r\n\r\n                    <Route path='/profile/:userId?'\r\n                           render={() => <ProfileContainer/>}/>\r\n                    <Route path='/music'\r\n                           render={() => <Music/>}/>\r\n                    <Route path='/news'\r\n                           render={() => <News/>}/>\r\n                    <Route path='/settings'\r\n                           render={withSuspense(Settings)}/>\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path='/login'\r\n                           render={withSuspense(Login)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n};\r\n\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App)\r\n;\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;","import reportWebVitals from './reportWebVitals';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from './App';\r\n\r\n\r\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}